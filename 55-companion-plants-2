public Boolean companionPlants(List<String> plants) {
    /* Some plants are considered companion plants. They grow better when planted next to each other. For the purpose
    of this problem, we consider the following plants to be companions: lettuce and cucumbers, lettuce and onions,
    onions and carrots, and onions and tomatoes. The same plants planted next to each other are not considered
    companions.

    Write a function isCompanion that takes as input a list of plants being planted in a row. Return true only if
    every plant in the list is planted next to a companion and return false otherwise.
    */

    //Loop over the List and check if the current element is a companion to the next

    //Create a Boolean flag variable
    Boolean results = false;

    //Creat a Loop for the List
    for (Integer i = 0; i < (plants.size() - 1); i++) {
        //Create a conditional to check if they are companions
        if (plants.isEmpty()) {
            results = true;
            break;
        } else if (plants.get(i) == 'lettuce' && (plants.get(i + 1) == 'cucumbers' || plants.get(i + 1) == 'onions')) {
            results = true;
        //} else if (plants.get(i) == 'onions' && (plants.get(i + 1) == 'carrots' || plants.get(i + 1) == 'tomatoes' || plants.get(i + 1) == 'lettuce')) {
        //    results = true;
        //} else if (plants.get(i) == 'cucumbers' && (plants.get(i + 1) == 'lettuce')) {
        //    results = true;
        //} else if (plants.get(i) == 'carrots' && (plants.get(i + 1) == 'onions')) {
         //   results = true;
        //} else if (plants.get(i) == 'tomatoes' && (plants.get(i + 1) == 'onions')) {
        //    results = true;
        }

    }

    return results;

}