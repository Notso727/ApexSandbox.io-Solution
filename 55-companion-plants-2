public Boolean companionPlants(List<String> plants) {
    /* Some plants are considered companion plants. They grow better when planted next to each other. For the purpose
    of this problem, we consider the following plants to be companions: lettuce and cucumbers, lettuce and onions,
    onions and carrots, and onions and tomatoes. The same plants planted next to each other are not considered
    companions.

    Write a function isCompanion that takes as input a list of plants being planted in a row. Return true only if
    every plant in the list is planted next to a companion and return false otherwise.
    */

    // Create a Boolean flag variable
    Boolean results = true;

    // First, check to see if the list is empty and return true
    if(plants.size() == 1) results = false;
    
    if (plants.isEmpty()) {
        results = true;
    } else {
        // Create a Loop for the List
        for (Integer i = 0; i < (plants.size() - 1); i++) {
            // Check if the plants are companions
            if ( (plants[i] == 'lettuce' && (plants[i + 1] == 'cucumbers' || plants[i + 1] == 'onions')) ||
                    (plants[i] == 'onions' && (plants[i + 1] == 'carrots' || plants[i + 1] == 'tomatoes' || plants[i + 1] == 'lettuce')) ||
                    (plants[i] == 'cucumbers' && (plants[i + 1] == 'lettuce')) ||
                    (plants[i] == 'carrots' && (plants[i + 1] == 'onions')) ||
                    (plants[i] == 'tomatoes' && (plants[i + 1] == 'onions')) ) {
                // Continue to the next iteration, as the plants are companions
                continue;
            } else {
                // If the plants are not companions, set results to false and break the loop
                results = false;
                break;
            }
        }
    }

    return results;
}