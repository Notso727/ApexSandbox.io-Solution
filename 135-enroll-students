public void enrollStudents(List<String> emails, String className) {
    // Look for nulls
    if (emails == null || className == null) {
        throw new IllegalArgumentException("emails and className cannot be null");
    }

    // Conduct a SOQL query to get the ID of the course
    apxio__Class__c classRecord = [SELECT Id
                                   FROM apxio__Class__c
                                   WHERE Name = :className
                                   LIMIT 1];
    if (classRecord == null) {
        throw new IllegalArgumentException("No class found with name " + className);
    }

    // Conduct a SOQL query to get the IDs of the students
    List<apxio__Student__c> studentsToEnroll = [SELECT Id
                                                FROM apxio__Student__c
                                                WHERE apxio__Email__c IN :emails];
    if (studentsToEnroll.isEmpty()) {
        throw new IllegalArgumentException("No students found with provided emails");
    }

    // Create new enrollment records for each student/class combination
    List<apxio__Class_Enrollment__c> enrollments = new List<apxio__Class_Enrollment__c>();
    for (apxio__Student__c student : studentsToEnroll) {
        apxio__Class_Enrollment__c enrollment = new apxio__Class_Enrollment__c();
        enrollment.apxio__Class__c = classRecord.Id;
        enrollment.apxio__Student__c = student.Id;
        enrollments.add(enrollment);
    }
    insert enrollments;
}