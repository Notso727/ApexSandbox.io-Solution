public Integer secondLargest(List<Integer> numbers) {
    /* Given an list of Integers numbers, return the second largest integer in the list. Assume that the input list
     will always contain at least two distinct integers.

    Example: secondLargest(new List {5, 2, 8, 4, 8, 1}) evaluates to 5 because 5 is the second largest Integer
    in the array, with 8 being the largest integer.

    Note: while not necessary to solving this problem, it may be be helpful to know the smallest possible
    Integer: -2,147,483,648. However, you cannot set an integer directly to this value because of a bug in Apex, but
    you can do the following:
     */

    //Create variables
    Integer biggestInteger = -2147483647 - 1;
    Integer secondBiggestInteger = -2147483647 - 1;

    //What are the edge cases: null or empty list, same number, only one number
    //Loop over the list and if the current Integer is bigger than the last capture that number
    if(!numbers.isEmpty()){
        for(Integer num : numbers){
            if(num > biggestInteger){
                biggestInteger = num;
                }
            if(num > secondBiggestInteger || num < biggestInteger){
                secondBiggestInteger = num;
            }
        }
    }

    //Loop again and if that number is not bigger than the last but not bigger than the biggest...

    //return the final number
    return secondBiggestInteger;

}